Pregunta 1:
Generar un codigo en python que sume 10 numeros aleatorios de la siguiente forma: los 5 mas bajos y los 5 mas altos

Pregunta 2:
Escribir un codigo en python que sume y multiplique respectivamente todos los numeros de una lista, ejemplo;
Numeros=1 2 3 4, suma 10, multiplicacion 24.
 
Pregunta 3:
Que es INDEX (indice) en base de datos, indicar beneficios y desventajas

Pregunta 4:
CARPETA 4

Pregunta 5:
Escribir una funcion sum() y una función multip() que sumen y multipliquen respectivamente todos los números de una lista.
Por ejemplo: sum([1,2,3,4]) debería devolver 10 y multip([1,2,3,4]) debería devolver 24.

Pregunta 6:
Crear una funcion que determine si dado una serie de parentesis, estas se encuentran en pares, es decir,
abierto '(' y cerrado ')'.
Ejm:
 Entrada: '(()()())()()(())'
 Salida: True

 Entrada: '(()('
 Salida: False

Pregunta 7:
Desarrollar una funcion que me devuelva el n-esimo fibonacci
Recordar que la serie fibonacci inicia en uno, es decir que fibonacci(1) = 1, ademas que
el fibonacci(3) = fibonacci(2) + fibonacci(1)

Nota: Implementarlo de modo iterativo.

########################################################################################################

#Pregunta 8: 
#Hacer un servicio API Rest en python usando Django y Django Rest 
#Framework que devuelva la hora actual en formato ISO.
#Ejemplo:
#{
#    "hora_actual": "2017-05-23T16:54:00Z"
#}


1: crear el entorno virtual "python -m venv "nombre del entorno virtual"
2: instalar los modulos que estan en el archivo "requirements.txt" usando: pip install -r requirements.txt
3: iniciar la aplicacion "python manage.py runserver"
4: abrir el enlace en un explorador o usando Postman "http://127.0.0.1:8000/" agregandole "time/

	url: hppt://127.0.0.1:8000/time/

5: mostrara el resultado en formato json, mostrando la hora actual en formato ISO


###########################################################################################################

#Pregunta 9:
#Hacer un servicio web que haga un CRUD(create, read, update, delete), 
#donde puedas crear, leer, actualizar y borrar Usuarios

1: crear el entorno virtual "python -m venv "nombre del entorno virtual"
2: instalar los modulos que estan en el archivo "requirements.txt" usando: pip install -r requirements.txt
3: iniciar la aplicacion "python manage.py runserver"
4: abrir el enlace en un explorador o usando Postman "http://127.0.0.1:8000/" agregandole "usuarios"

	url: hppt://127.0.0.1:8000/usuarios/

5: dentro del panel del marco rest pueden realizarse las operaciones crud solicitados de creacion de usuario